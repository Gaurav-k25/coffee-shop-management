<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>